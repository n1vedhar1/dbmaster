{
    "enum_usage_guide": "When querying enum fields, use the numeric values in WHERE clauses. For example, to find Import purchase orders, use WHERE purchase_order_type = 1",
    "dock_guide": "when an armada is checked in, it is considered as booked. when an armada is checked out, it is considered as available. when an armada is open, it is considered as available. when an armada is closed, it is considered as booked. Basically when status is empty or >3, it is considered as booked, else it is available.",
    "tables": [
      {
        "name": "order_purchase_orders",
        "description": "Stores purchase order information including vendor and delivery details",
        "keywords": ["purchase orders", "PO", "orders"],
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "external_po_id", "type": "string", "example": "PO.9410215014", "description": "External reference ID with prefix (PO., SR., ST., etc.)"},
          {"name": "business_unit", "type": "string"},
          {"name": "purchase_order_date", "type": "date"},
          {"name": "vendor_reference", "type": "string"},
          {"name": "buyer_code", "type": "string"},
          {"name": "purchase_order_type", "type": "integer", "enum": {
            "mapping": {
              "Local": 0,
              "Import": 1,
              "Flow Through": 2,
              "Transfer": 3,
              "Tugu": 4,
              "Intercompany": 5,
              "Sales Return": 6
            }
          }},
          {"name": "seller_address", "type": "string"},
          {"name": "seller_city", "type": "string"},
          {"name": "buyer_name", "type": "string"},
          {"name": "buyer_address", "type": "string"},
          {"name": "buyer_city", "type": "string"},
          {"name": "expected_receipt_date", "type": "date"},
          {"name": "notes", "type": "text"},
          {"name": "status", "type": "integer", "default": 0, "enum": {
            "mapping": {
              "New Order": 0,
              "In Receiving": 1,
              "Partially Received": 2,
              "Closed": 3,
              "Verified": 4,
              "Received": 5
            }
          }},
          {"name": "order_number", "type": "string", "example": "9410214997", "description": "Numeric order number without prefix"},
          {"name": "vendor_name", "type": "string"},
          {"name": "warehouse_code", "type": "string"},
          {"name": "document_processed", "type": "boolean", "default": false},
          {"name": "aju_number", "type": "string", "default": "", "null": false},
          {"name": "delivery_number", "type": "string", "default": "", "null": false},
          {"name": "sap_document_number", "type": "string"},
          {"name": "created_by", "type": "string"},
          {"name": "updated_by", "type": "string"}
        ]
      },
      {
        "name": "order_purchase_order_line_items",
        "description": "Stores individual line items for purchase orders including quantities and status",
        "keywords": ["line items", "order items", "PO items", "skus"],
        "guidelines": "When querying line items, use the purchase_order_id (which is id from order_purchase_orders table) to join with the order_purchase_orders table.",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "description", "type": "string"},
          {"name": "sku_profiled", "type": "boolean"},
          {"name": "status", "type": "integer", "default": 0, "enum": {
            "mapping": {
              "New": 0,
              "In Progress": 1,
              "Partially Received": 2,
              "Completed": 3,
              "Rejected": 4,
              "Cancelled": 5
            }
          }},
          {"name": "ordered_quantity", "type": "integer", "default": 0},
          {"name": "received_quantity", "type": "integer", "default": 0},
          {"name": "adjusted_quantity", "type": "integer", "default": 0},
          {"name": "rejected_quantity", "type": "integer", "default": 0},
          {"name": "uom", "type": "string"},
          {"name": "hold_code", "type": "string"},
          {"name": "location", "type": "string"},
          {"name": "purchase_order_id", "type": "bigint", "null": false},
          {"name": "sku", "type": "string"},
          {"name": "department", "type": "string"},
          {"name": "sku_type", "type": "string"},
          {"name": "item_number", "type": "integer"},
          {"name": "site_code", "type": "string"},
          {"name": "flow_through_quantity", "type": "integer", "default": 0},
          {"name": "has_sku_mismatch", "type": "boolean", "default": false},
          {"name": "warehouse_code", "type": "string"},
          {"name": "created_by", "type": "string"},
          {"name": "updated_by", "type": "string"}
        ]
      },
      {
        "name": "dock_schedule_armada_dock_schedules",
        "keywords": ["dock schedule", "armada", "schedule", "armada schedule", "fleet", "vehicle"],
        "description": "Stores dock scheduling information for armadas including timing and status. It has a many-to-many relationship with order_purchase_orders table through dock_schedule_armada_dock_schedule_order_purchase_orders table.",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "armada", "type": "string"},
          {"name": "armada_type", "type": "string"},
          {"name": "cbm", "type": "float"},
          {"name": "weight", "type": "float"},
          {"name": "queue", "type": "integer"},
          {"name": "current_location", "type": "string"},
          {"name": "driver_name", "type": "string"},
          {"name": "driver_phone_number", "type": "string"},
          {"name": "eta", "type": "date", "description": "Date and time when the armada is expected to arrive at the warehouse"},
          {"name": "unloading_started_at", "type": "datetime", "description": "Date and time when unloading started"},
          {"name": "unloading_ended_at", "type": "datetime", "description": "Date and time when unloading ended"},
          {"name": "start_time", "type": "datetime", "description": "Time when the armada supposed to be unloaded"},
          {"name": "end_time", "type": "datetime", "description": "Time when the armada supposed to finish unloading"},
          {"name": "warehouse_code", "type": "string"},
          {"name": "armada_category", "type": "string"},
          {"name": "created_by", "type": "string"},
          {"name": "updated_by", "type": "string"}
        ]
      },
      {
        "name": "dock_schedule_armada_activities",
        "description": "Tracks activities related to dock scheduling and armada movements such as check in, check out, physical check in, open armada, close armada, etc.",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "armada_dock_schedule_id", "type": "bigint", "null": false},
          {"name": "note", "type": "string"},
          {"name": "primary_approver_id", "type": "bigint"},
          {"name": "secondary_approver_id", "type": "bigint"},
          {"name": "activity_type", "type": "integer", "default": 0, "enum": {
            "mapping": {
              "check_in": 0,
              "physical_check_in": 1,
              "open_armada": 2,
              "close_armada": 3,
              "check_out": 4
            }
          }},
          {"name": "warehouse_code", "type": "string"},
          {"name": "created_by", "type": "string"},
          {"name": "updated_by", "type": "string"},
          {"name": "physical_check_in_metadata", "type": "jsonb"}
        ]
      },
      {
        "name": "business_units",
        "description": "Stores information about different business units in the organization",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "name", "type": "string"},
          {"name": "description", "type": "string"},
          {"name": "code", "type": "string"},
          {"name": "created_at", "type": "datetime", "null": false},
          {"name": "updated_at", "type": "datetime", "null": false},
          {"name": "created_by", "type": "integer"},
          {"name": "updated_by", "type": "integer"}
        ]
      },
      {
        "name": "departments",
        "description": "Stores department information within the organization",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "name", "type": "string"},
          {"name": "code", "type": "string"},
          {"name": "description", "type": "string"},
          {"name": "created_by", "type": "string"},
          {"name": "updated_by", "type": "string"}
        ]
      },
      {
        "name": "locations",
        "description": "Stores warehouse location information including dimensions and capacity",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "warehouse_code", "type": "string"},
          {"name": "location", "type": "string"},
          {"name": "length", "type": "float"},
          {"name": "width", "type": "float"},
          {"name": "height", "type": "float"},
          {"name": "location_type", "type": "string"},
          {"name": "location_flag", "type": "string"},
          {"name": "location_handling", "type": "integer"},
          {"name": "location_category", "type": "string"},
          {"name": "logic_allocation", "type": "string"},
          {"name": "cubic_capacity", "type": "float"},
          {"name": "weight_capacity", "type": "float"},
          {"name": "status", "type": "string"},
          {"name": "putaway_zone_id", "type": "bigint", "null": false}
        ]
      },
      {
        "name": "skus",
        "description": "Stores Stock Keeping Unit information including dimensions, weights, and handling requirements",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "warehouse_code", "type": "string"},
          {"name": "active", "type": "boolean"},
          {"name": "sku_code", "type": "string"},
          {"name": "description", "type": "string"},
          {"name": "manufacturer_sku", "type": "string"},
          {"name": "standard_gross_weight", "type": "decimal", "precision": 10, "scale": 2},
          {"name": "standard_net_weight", "type": "decimal", "precision": 10, "scale": 2},
          {"name": "standard_cube", "type": "decimal", "precision": 10, "scale": 2},
          {"name": "shelf_life_indicator", "type": "boolean", "default": false},
          {"name": "shelf_life_on_receiving", "type": "integer"},
          {"name": "min_shelf_life_for_picking", "type": "integer"},
          {"name": "shelf_life_outbound", "type": "integer"},
          {"name": "business_unit_id", "type": "bigint"},
          {"name": "default_uom_id", "type": "bigint"},
          {"name": "sku_type", "type": "string"}
        ]
      },
      {
        "name": "warehouses",
        "description": "Stores warehouse information including location and ownership details",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "name", "type": "string"},
          {"name": "code", "type": "string"},
          {"name": "warehouse_site_code", "type": "string"},
          {"name": "owner", "type": "string"},
          {"name": "display_name", "type": "string"},
          {"name": "created_by", "type": "integer"},
          {"name": "updated_by", "type": "string"}
        ]
      },
      {
        "name": "dock_schedule_armada_dock_schedule_order_purchase_orders",
        "description": "Join table connecting dock schedules with purchase orders",
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "armada_dock_schedule_id", "type": "bigint", "null": false, "description": "This is the id from dock_schedule_armada_dock_schedules table."},
          {"name": "purchase_order_id", "type": "bigint", "null": false, "description": "This is the id from order_purchase_orders table. Find id from order_purchase_orders table order_number."},
          {"name": "asn_number", "type": "string"},
          {"name": "asn_status", "type": "string"},
          {"name": "verified_and_closed_by", "type": "string"},
          {"name": "created_at", "type": "datetime", "null": false},
          {"name": "updated_at", "type": "datetime", "null": false}
        ]
      },
      {
        "name": "dock_schedule_docks",
        "description": "Stores information about warehouse docks including their status and validity period. A dock's availability is determined by its activities - it is considered available if there are no activities for a date or if the last activity type is greater than 3 (check_out). Otherwise, it is considered booked.",
        "keywords": ["docks", "warehouse docks", "dock schedule"],
        "availability_calculation": {
          "description": "To determine if a dock is available for a specific date:",
          "steps": [
            "1. Get all activities for the dock on the specified date by joining with dock_schedule_armada_dock_schedules and dock_schedule_armada_activities tables",
            "2. If there are no activities for that date, the dock is AVAILABLE",
            "3. If there are activities, check the last activity's type:",
            "   - If the last activity type is greater than 3 (check_out = 4), the dock is AVAILABLE",
            "   - If the last activity type is 3 or less (check_in = 0, physical_check_in = 1, open_armada = 2, close_armada = 3), the dock is BOOKED"
          ],
          "important_notes": [
            "The availability is determined by the sequence of activities, not just the presence of a booking",
            "A dock can transition between available and booked states multiple times in a day",
            "The last activity type is the only one that matters for determining current availability",
            "Activity types 0-3 indicate the dock is in use (booked)",
            "Activity type 4 (check_out) indicates the dock is free (available)"
          ]
        },
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "name", "type": "string", "description": "Name or identifier of the dock"},
          {"name": "status", "type": "integer", "default": 0, "null": false, "description": "Current status of the dock", "enum": {
            "mapping": {
              "active": 0,
              "inactive": 1
            }
          }},
          {"name": "warehouse_code", "type": "string", "description": "Code of the warehouse this dock belongs to"},
          {"name": "valid_from", "type": "datetime", "description": "Start date and time when the dock becomes valid"},
          {"name": "valid_to", "type": "datetime", "description": "End date and time when the dock validity expires"},
          {"name": "created_by", "type": "string", "description": "User who created the dock record"},
          {"name": "updated_by", "type": "string", "description": "User who last updated the dock record"},
          {"name": "created_at", "type": "datetime", "null": false},
          {"name": "updated_at", "type": "datetime", "null": false}
        ]
      },
      {
        "name": "dock_schedule_armada_dock_schedules_docks",
        "description": "Join table that connects armada dock schedules with docks, enabling many-to-many relationship between docks and armada schedules",
        "keywords": ["docks", "armada schedules", "join table"],
        "columns": [
          {"name": "id", "type": "bigint", "primary_key": true},
          {"name": "armada_dock_schedule_id", "type": "bigint", "null": false, "description": "This is the id from dock_schedule_armada_dock_schedules table."},
          {"name": "dock_id", "type": "bigint", "null": false, "description": "This is the id from dock_schedule_docks table."},
          {"name": "created_at", "type": "datetime", "null": false},
          {"name": "updated_at", "type": "datetime", "null": false}
        ]
      }
    ],
    "relationships": [
      {
        "relationship_context": "Each location belongs to exactly one putaway zone, which determines where items can be stored. The putaway_zone_id in locations table references the id in putaway_zones table.",
        "from_table": "locations",
        "to_table": "putaway_zones",
        "type": "belongs_to",
        "foreign_key": "putaway_zone_id"
      },
      {
        "from_table": "skus",
        "to_table": "business_units",
        "type": "belongs_to",
        "foreign_key": "business_unit_id",
        "relationship_context": "Each SKU (Stock Keeping Unit) belongs to one business unit. The business_unit_id in skus table references the id in business_units table."
      },
      {
        "from_table": "order_purchase_order_line_items",
        "to_table": "order_purchase_orders",
        "type": "belongs_to",
        "foreign_key": "purchase_order_id",
        "relationship_context": "Each line item belongs to exactly one purchase order. The purchase_order_id in order_purchase_order_line_items table references the id in order_purchase_orders table. This is a one-to-many relationship where one purchase order can have multiple line items."
      },
      {
        "from_table": "order_purchase_orders",
        "to_table": "order_purchase_order_line_items",
        "type": "has_many",
        "foreign_key": "purchase_order_id",
        "relationship_context": "Each purchase order can have multiple line items. The id in order_purchase_orders table is referenced by purchase_order_id in order_purchase_order_line_items table. This is a one-to-many relationship."
      },
      {
        "from_table": "dock_schedule_armada_activities",
        "to_table": "dock_schedule_armada_dock_schedules",
        "type": "belongs_to",
        "foreign_key": "armada_dock_schedule_id",
        "relationship_context": "Each activity record belongs to one dock schedule. The armada_dock_schedule_id in activities table references the id in dock_schedule_armada_dock_schedules table."
      },
      {
        "from_table": "dock_schedule_armada_activities",
        "to_table": "users",
        "type": "belongs_to",
        "foreign_key": "primary_approver_id",
        "relationship_context": "Each activity can have one primary approver (user). The primary_approver_id in activities table references the id in users table."
      },
      {
        "from_table": "dock_schedule_armada_activities",
        "to_table": "users",
        "type": "belongs_to",
        "foreign_key": "secondary_approver_id",
        "relationship_context": "Each activity can have one secondary approver (user). The secondary_approver_id in activities table references the id in users table."
      },
      {
        "from_table": "dock_schedule_armada_dock_schedule_order_purchase_orders",
        "to_table": "dock_schedule_armada_dock_schedules",
        "type": "belongs_to",
        "foreign_key": "armada_dock_schedule_id",
        "relationship_context": "This is a join table entry that belongs to one dock schedule. The armada_dock_schedule_id references the id in dock_schedule_armada_dock_schedules table."
      },
      {
        "from_table": "dock_schedule_armada_dock_schedule_order_purchase_orders",
        "to_table": "order_purchase_orders",
        "type": "belongs_to",
        "foreign_key": "purchase_order_id",
        "relationship_context": "This is a join table entry that belongs to one purchase order. The purchase_order_id references the id in order_purchase_orders table."
      },
      {
        "from_table": "dock_schedule_armada_dock_schedules",
        "to_table": "order_purchase_orders",
        "type": "has_many",
        "through": "dock_schedule_armada_dock_schedule_order_purchase_orders",
        "relationship_context": "A dock schedule can be associated with multiple purchase orders through the join table dock_schedule_armada_dock_schedule_order_purchase_orders. This is a many-to-many relationship."
      },
      {
        "from_table": "order_purchase_orders",
        "to_table": "dock_schedule_armada_dock_schedules",
        "type": "has_many",
        "through": "dock_schedule_armada_dock_schedule_order_purchase_orders",
        "relationship_context": "A purchase order can be associated with multiple dock schedules through the join table dock_schedule_armada_dock_schedule_order_purchase_orders. This is a many-to-many relationship."
      },
      {
        "from_table": "dock_schedule_docks",
        "to_table": "dock_schedule_armada_dock_schedules_docks",
        "type": "has_many",
        "relationship_context": "A dock can have multiple armada dock schedule associations through the join table. This is a many-to-many relationship."
      },
      {
        "from_table": "dock_schedule_armada_dock_schedules_docks",
        "to_table": "dock_schedule_armada_dock_schedules",
        "type": "belongs_to",
        "foreign_key": "armada_dock_schedule_id",
        "relationship_context": "Each join table entry belongs to one armada dock schedule. The armada_dock_schedule_id references the id in dock_schedule_armada_dock_schedules table."
      },
      {
        "from_table": "dock_schedule_armada_dock_schedules_docks",
        "to_table": "dock_schedule_docks",
        "type": "belongs_to",
        "foreign_key": "dock_id",
        "relationship_context": "Each join table entry belongs to one dock. The dock_id references the id in dock_schedule_docks table."
      }
    ]
  } 